#Copyright (c) 2021 Cisco and/or its affiliates.
#
#This software is licensed to you under the terms of the Cisco Sample
#Code License, Version 1.1 (the "License"). You may obtain a copy of the
#License at
#
#               https://developer.cisco.com/docs/licenses
#
#All use of the material herein must be in accordance with the terms of
#the License. All rights not expressly granted by the License are
#reserved. Unless required by applicable law or agreed to separately in
#writing, software distributed under the License is distributed on an "AS
#IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
#or implied.



### This Playbook cleans up Nexus Dashboard and ACI

- name: Play 1 Cleanup ND and ACI
  hosts: all
  gather_facts: no


  tasks:

#### Pause
   - name: Pause before Cleanup 
     pause:
       minutes: "{{ pause }}"

#### ACI Login fact (not necessary anymore but good to know :) )
   - set_fact:
      aci_login: &aci_login
        host: "{{ inventory_hostname }}"
        username: "{{ lookup('env', 'ANSIBLE_NET_USERNAME') }}"
        password: "{{ lookup('env', 'ANSIBLE_NET_PASSWORD') }}"
        use_ssl: yes
        validate_certs: no

#### Delete SPAN Config
   - name: Delete Destination Group
     aci_rest:
       <<: *aci_login
       path: /api/node/mo/uni/tn-{{ tenant_name }}/destgrp-span_dest.json
       method: delete
       content:
         {
         }
     delegate_to: localhost




   - name: Delete Source Group
     aci_rest:
       <<: *aci_login
       path: /api/mo/uni/tn-{{ tenant_name }}/srcgrp-span_src.json
       method: delete
       content:
        {

        }
     delegate_to: localhost

#### ND Login
   - name: Login to ND
     uri:
         url: https://{{ nd }}/login
         headers:
           {
            Content-Type: "application/json"
           }
         method: POST
         body_format: json
         body:
           {
            username: "{{ lookup('env', 'ANSIBLE_NET_USERNAME') }}",
            password: "{{ lookup('env', 'ANSIBLE_NET_PASSWORD') }}",
           }
         status_code: 200
         return_content: yes
         validate_certs: no
     register: qResult
     delegate_to: localhost

#### Set ND Login Cookies
   - name: Set ND Login Cookies
     set_fact:
       ndCookie: "{{ qResult.cookies.AuthCookie }}"
       authCookie: "{{ qResult.set_cookie }}"


#### Delete Flow Record Policy
   - name: Delete Flow Record Policy
     uri:
       url: https://{{ nd }}/sedgeapi/v1/cisco-nir/api/api/telemetry/config/policy.json?fabricName={{ siteName }}
       headers:
         {
          Content-Type: "application/json",
          AuthCookie: "{{ ndCookie }}",
          Cookie: "{{ authCookie }}"
         }
       method: POST
       body_format: json
       body:
         {
             "method": "POST",
             "uri": "/api/node/mo/uni/tn-{{ tenant_name }}/ctx-{{ tenant_name }}_VRF/sfltgrp.json",
             "payload": {
                 "telemetrySubnetFltGrp": {
                     "attributes": {
                         "dn": "uni/tn-{{ tenant_name }}/ctx-{{ tenant_name }}_VRF/sfltgrp",
                         "status": "deleted"
                     }
                 }
             }
         }
       status_code: 200
       return_content: yes
       validate_certs: no
     register: qResult
     delegate_to: localhost


#### Close Ticket
- name: Play 2 Close Gitlab Issue
  hosts: all
  gather_facts: no


  tasks:

    - name: Update Zammad Ticket
      uri:
          url: http://{{ ZammadUrl }}/api/v1/tickets/{{ issueID }}
          headers:
            Authorization: Bearer "{{ zammadapitoken }}"
          method: DELETE
          status_code: 200
          return_content: yes
          validate_certs: no
      register: qResultBody  
      delegate_to: localhost 


