#Copyright (c) 2021 Cisco and/or its affiliates.
#
#This software is licensed to you under the terms of the Cisco Sample
#Code License, Version 1.1 (the "License"). You may obtain a copy of the
#License at
#
#               https://developer.cisco.com/docs/licenses
#
#All use of the material herein must be in accordance with the terms of
#the License. All rights not expressly granted by the License are
#reserved. Unless required by applicable law or agreed to separately in
#writing, software distributed under the License is distributed on an "AS
#IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
#or implied.


### This Playbook queries the ticket system for the issue id and the content
- name: Query Zammad Issue
  hosts: all
  connection: local
  gather_facts: no

  tasks:



#### Get Issue ID 
    - name: GET Zammad Issue ID
      uri:
          url: http://{{ ZammadUrl }}/api/v1/tickets/search?query=state:new&sort_by:id
          headers:
            Authorization: Bearer "{{ zammadapitoken }}"
          method: GET
          body_format: json
          status_code: 200
          return_content: yes
          validate_certs: no
      register: qResult

#### Get Content of the issue
    - name: GET Zammad Body
      uri:
          url: http://{{ ZammadUrl }}/api/v1/ticket_articles/by_ticket/{{ qResult.json.tickets[0] }}?sort_by:created_at
          headers:
            Authorization: Bearer "{{ zammadapitoken }}"
          method: GET
          body_format: json
          status_code: 200
          return_content: yes
          validate_certs: no
      register: qResultBody    


#### Extract IP from Ticket Content aswell as userId and issueID - and finally set as stat for later user
    - name: Set IP Variable
      set_stats:
        data:
          endpoint: "{{ qResultBody.json[0].body | regex_search('\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}')  }}"
          issueID: "{{ qResult.json.tickets[0] }}"
          userId: "{{ qResultBody.json[0].from | regex_search('(?<=<).*?(?=>)') }}" 
