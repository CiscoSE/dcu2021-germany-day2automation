#Copyright (c) 2021 Cisco and/or its affiliates.
#
#This software is licensed to you under the terms of the Cisco Sample
#Code License, Version 1.1 (the "License"). You may obtain a copy of the
#License at
#
#               https://developer.cisco.com/docs/licenses
#
#All use of the material herein must be in accordance with the terms of
#the License. All rights not expressly granted by the License are
#reserved. Unless required by applicable law or agreed to separately in
#writing, software distributed under the License is distributed on an "AS
#IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
#or implied.



#This Playbook collects following Information from an single IP Endpoint as input
# tenant_name: name of the tenant
# ap_name: name of the ap
# epg_name: name of the epg
# mac: mac address of the EP

- name: Play 1 Get Endpoint
  hosts: all
  gather_facts: no


  tasks:

#### Set ACI Login Fact
   - name: Set Login Fact
     set_fact:
      aci_login: &aci_login
        host: "{{ inventory_hostname }}"
        username: "{{ lookup('env', 'ANSIBLE_NET_USERNAME') }}"
        password: "{{ lookup('env', 'ANSIBLE_NET_PASSWORD') }}"
        use_ssl: yes
        validate_certs: no


#### Get endpoint information based on extracted endpoint from ticket
   - name: Get Endpoint
     aci_rest:
       <<: *aci_login
       path: /api/node/class/fvIp.json?query-target-filter=and(eq(fvIp.addr,"{{ endpoint }}"))&order-by=fvIp.modTs|desc
       method: get
     delegate_to: localhost
     register: qResult


   - name: Set Result fact 
     set_fact:
        result: "{{ qResult.imdata[0].fvIp.attributes.dn }}"

#### Set Stats for next Job Template
   - name: Set Stats for next Workflow
     set_stats:
       data:
         tenant_name: "{{ result | regex_search('(?<=tn-)(.*)(?=/ap)') }}"
         ap_name: "{{ result | regex_search('(?<=ap-)(.*)(?=/epg)') }}"
         epg_name: "{{ result | regex_search('(?<=epg-)(.*)(?=/cep)') }}"
         mac: "{{ result | regex_search('(?<=cep-)(.*)(?=/ip)') }}"
         dn: "{{ result | regex_search('(.*)(?=/cep)') }}"
       per_host: no

#### Set same values as facts
   - name: Set Facts
     set_fact:
         tenant_name: "{{ result | regex_search('(?<=tn-)(.*)(?=/ap)') }}"
         ap_name: "{{ result | regex_search('(?<=ap-)(.*)(?=/epg)') }}"
         epg_name: "{{ result | regex_search('(?<=epg-)(.*)(?=/cep)') }}"
         mac: "{{ result | regex_search('(?<=cep-)(.*)(?=/ip)') }}"

#### Get Path of the Endpoint
   - name: Get Endpoint Path
     aci_rest:
       <<: *aci_login
       path: /api/node/mo/uni/tn-{{ tenant_name }}/ap-{{ ap_name }}/epg-{{ epg_name }}/cep-{{ mac }}.json?query-target=subtree&target-subtree-class=fvRsCEpToPathEp
       method: get
     delegate_to: localhost
     register: pqResult


   - name: Set Facts
     set_fact:
         path: "{{ pqResult.imdata | map(attribute='fvRsCEpToPathEp.attributes.tDn') | list }}"
         
#### Set node and Port Fact
   - name: Set Node and Port Fact
     set_fact:
       node: "{{ path[0] | regex_search('(?<=paths-)(.*)(?=/path)') }}"
       port: "{{ path[0] | regex_search('(?<=pathep-.eth1/)(.*)(?=])') }}"

      # path: "{{ pqResult.imdata[*].fvRsCEpToPathEp.attributes.tDn }}"

#### Set TicketText
   - name: Set Ticket Stat
     set_stats:
       data:
         ticketText: "Tenant Name: {{ tenant_name }}<br>Application Profile: {{ ap_name }}<br>Endpoint Group: {{ epg_name }}<br>Node: {{ node }}<br>Port: {{ port }}<br><br>Link to APIC: https://xxxxxx/#bTenants:{{ tenant_name }}|uni/tn-{{ tenant_name }}/ap-{{ ap_name }}"
       per_host: no




     