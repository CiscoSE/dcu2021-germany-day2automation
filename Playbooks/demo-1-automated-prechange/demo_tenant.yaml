#Copyright (c) 2021 Cisco and/or its affiliates.
#
#This software is licensed to you under the terms of the Cisco Sample
#Code License, Version 1.1 (the "License"). You may obtain a copy of the
#License at
#
#               https://developer.cisco.com/docs/licenses
#
#All use of the material herein must be in accordance with the terms of
#the License. All rights not expressly granted by the License are
#reserved. Unless required by applicable law or agreed to separately in
#writing, software distributed under the License is distributed on an "AS
#IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
#or implied.


- name: Play 1 Create a Base Tenant
  hosts: all
  gather_facts: no


  tasks:

   - set_fact:
      aci_login: &aci_login
        host: "{{ inventory_hostname }}"
        username: "{{ lookup('env', 'ANSIBLE_NET_USERNAME') }}"
        password: "{{ lookup('env', 'ANSIBLE_NET_PASSWORD') }}"
        output_path: /tmp/dump.json        
        use_ssl: yes
        validate_certs: no

   - name: Delete /tmp/dump.json
     file:
       path: /tmp/dump.json
       state: absent
     delegate_to: localhost


### Configure a Tenant based on variable "tenant_name"
   - name: Set Tenant
     cisco.aci.aci_tenant:
       <<: *aci_login
       output_path: /tmp/dump.json
       state: present
       tenant: "{{ tenant_name }}"
     delegate_to: localhost



   - name: Add a new VRF to {{ tenant_name }}
     cisco.aci.aci_vrf:
       <<: *aci_login
       vrf: "{{ tenant_name }}_vrf"
       tenant: "{{ tenant_name }}"
       descr: TestVRFBestVrf 
       output_path: /tmp/dump.json
       policy_control_preference: enforced
       policy_control_direction: ingress
       state: present
     delegate_to: localhost
#####
##### APP CONFIG####
   - name: Add server AP
     cisco.aci.aci_ap:
       <<: *aci_login
       tenant: "{{ tenant_name }}"
       ap: TestAppBestApp
       description: TestAppBestApp ap for {{ tenant_name }}
       state: present
     delegate_to: localhost
  

   - name: Add nginx Bridge Domain
     cisco.aci.aci_bd:
       <<: *aci_login
       tenant: "{{ tenant_name }}"
       bd: BD-TestAppBestApp
       vrf: "{{ tenant_name }}_vrf"
       state: present
     delegate_to: localhost

   - name: Add nginx Bridge Domain
     cisco.aci.aci_bd:
       <<: *aci_login
       tenant: "{{ tenant_name }}"
       bd: BD-TestAppBestApp1
       vrf: "{{ tenant_name }}_vrf"
       state: present
     delegate_to: localhost

   - name: Create a subnet
     cisco.aci.aci_bd_subnet:
       <<: *aci_login
       tenant: "{{ tenant_name }}"
       bd: BD-TestAppBestApp
       gateway: 192.168.134.1
       mask: 24
       state: present
     delegate_to: localhost

   - name: Create a subnet
     cisco.aci.aci_bd_subnet:
       <<: *aci_login
       tenant: "{{ tenant_name }}"
       bd: BD-TestAppBestApp1
       gateway: 192.168.134.1
       mask: 24
       state: present
     delegate_to: localhost

   - name: Add a new Webserver EPG
     cisco.aci.aci_epg:
       <<: *aci_login
       tenant: "{{ tenant_name }}"
       ap: TestAppBestApp
       epg: webserver
       description: Webserver EPG for {{ tenant_name }}
       bd: BD-TestAppBestApp
       preferred_group: yes
       state: present
     delegate_to: localhost


   - name: Add a new db EPG
     cisco.aci.aci_epg:
       <<: *aci_login
       tenant: "{{ tenant_name }}"
       ap: TestAppBestApp
       epg: db
       description: db for {{ tenant_name }}
       bd: BD-TestAppBestApp
       preferred_group: yes
       state: present
     delegate_to: localhost


   - name: Add a new TestApp EPG
     cisco.aci.aci_epg:
       <<: *aci_login
       tenant: "{{ tenant_name }}"
       ap: TestAppBestApp
       epg: testapp
       description: TestAppBestApp for {{ tenant_name }}
       bd: BD-TestAppBestApp
       preferred_group: yes
       state: present
     delegate_to: localhost

#####
##### Contract Configuration Web to app####



   - name: Add a new web to app contract
     cisco.aci.aci_contract:
       <<: *aci_login
       tenant: "{{ tenant_name }}"
       contract: web_to_app
       description: Communication between web-servers and TestApp
       scope: application-profile
       state: present
     delegate_to: localhost


   - name: Add a new contract subject
     cisco.aci.aci_contract_subject:
       <<: *aci_login
       port: 443
       tenant: "{{ tenant_name }}"
       contract: web_to_app
       subject: permit-12345
       description: web_to_app subject
       reverse_filter: yes
       state: present
     delegate_to: localhost

   - name: Add a new filter to a tenant
     cisco.aci.aci_filter:
       <<: *aci_login
       filter: app_filter
       description: Filter for web protocols
       tenant: "{{ tenant_name }}"
       state: present
     delegate_to: localhost

   - name: Add a new Filter Entry
     cisco.aci.aci_filter_entry:
       <<: *aci_login
       state: present
       entry: testapp
       tenant: "{{ tenant_name }}"
       ether_type: ip
       ip_protocol: tcp
       dst_port: 12345
       filter: app_filter
       descr: appfilter
     delegate_to: localhost

   - name: Add a new contract subject to filter binding
     cisco.aci.aci_contract_subject_to_filter:
       <<: *aci_login
       tenant: "{{ tenant_name }}"
       contract: web_to_app
       subject: permit-12345
       filter: app_filter
       state: present
     delegate_to: localhost




########

##### Contract Configuration Web to app####

   - name: Add a new app to db contract
     cisco.aci.aci_contract:
       <<: *aci_login
       tenant: "{{ tenant_name }}"
       contract: app_to_db
       description: Communication between app and db
       scope: application-profile
       state: present
     delegate_to: localhost


   - name: Add a new contract subject
     cisco.aci.aci_contract_subject:
       <<: *aci_login
       tenant: "{{ tenant_name }}"
       contract: app_to_db
       subject: permit-1433
       description: app_to_db subject
       reverse_filter: yes
       state: present
     delegate_to: localhost

   - name: Add a new filter to a tenant
     cisco.aci.aci_filter:
       <<: *aci_login
       filter: db_filter
       description: Filter for db protocols
       tenant: "{{ tenant_name }}"
       state: present
     delegate_to: localhost

   - name: Add a new Filter Entry
     cisco.aci.aci_filter_entry:
       <<: *aci_login
       state: present
       entry: db
       tenant: "{{ tenant_name }}"
       ether_type: ip
       ip_protocol: tcp
       dst_port: 1433
       filter: db_filter
       descr: dbfilter
     delegate_to: localhost

   - name: Add a new contract subject to filter binding
     cisco.aci.aci_contract_subject_to_filter:
       <<: *aci_login
       tenant: "{{ tenant_name }}"
       contract: app_to_db
       subject: permit-1433
       filter: db_filter
       state: present
     delegate_to: localhost


###############################
### Contract Binding

   - name: Add a new contract to EPG binding
     cisco.aci.aci_epg_to_contract:
       <<: *aci_login
       tenant: "{{ tenant_name }}"
       ap: TestAppBestApp
       epg: webserver
       contract: web_to_app
       contract_type: provider
       state: present
     delegate_to: localhost


   - name: Add a new contract to EPG binding
     cisco.aci.aci_epg_to_contract:
       <<: *aci_login
       tenant: "{{ tenant_name }}"
       ap: TestAppBestApp
       epg: testapp
       contract: web_to_app
       contract_type: consumer
       state: present
     delegate_to: localhost     




   - name: Add a new contract to EPG binding
     cisco.aci.aci_epg_to_contract:
       <<: *aci_login
       tenant: "{{ tenant_name }}"
       ap: TestAppBestApp
       epg: testapp
       contract: app_to_db
       contract_type: provider
       state: present
     delegate_to: localhost


   - name: Add a new contract to EPG binding
     cisco.aci.aci_epg_to_contract:
       <<: *aci_login
       tenant: "{{ tenant_name }}"
       ap: TestAppBestApp
       epg: db
       contract: app_to_db
       contract_type: consumer
       state: present
     delegate_to: localhost     